{"version":3,"sources":["loginpage/SignIn.jsx","api/retriver.jsx","api/language.jsx","components/Options.jsx","components/Options1.jsx","components/Options3.jsx","components/Options5.jsx","components/Options4.jsx","chatbot/config.js","chatbot/ActionProvider.js","chatbot/MessageParser.js","chatbot/ChatBot.jsx","App.js","index.js"],"names":["SignIn","navigate","useNavigate","_useState","useState","_useState2","Object","slicedToArray","errorMessages","setErrorMessages","_useState3","_useState4","isSubmitted","setIsSubmitted","database","username","password","errors","renderErrorMessage","name","react_default","a","createElement","className","message","renderForm","onSubmit","event","preventDefault","_document$forms$","document","forms","uname","pass","userData","find","user","value","type","required","axios","create","baseURL","language","classCallCheck","this","lang","text1","Options","props","text","setText","get_translation","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","api","get","params","msg","concat","sent","abrupt","data","stop","_x","_x2","apply","arguments","useEffect","getLanguage","text_0","text_1","text_2","text_3","text_4","text_5","buttonsMarkup","handler","actionProvider","starting_option_1","id","starting_option_2","starting_option_3","starting_option_4","starting_option_5","starting_option_6","map","option","key","onClick","text11","Options1","place_an_order_online","place_an_order_offline","Options3","cancel_order_yes","cancel_order_no","Options5","language_option_1","language_option_2","language_option_3","language_option_4","language_option_5","Options4","home_eye_test","try_on","config","botName","initialMessages","createChatBotMessage","widget","widgets","widgetName","widgetFunc","components_Options","components_Options1","components_Options5","components_Options3","components_Options4","ActionProvider","setStateFunc","_this","start_again","then","addMessageToState","locate_store","lowercase","_ref2","_callee2","_context2","pincode","_x3","_x4","cancel_order","ids","includes","order_id","index","indexOf","setLanguage","console","log","setState","prevState","objectSpread","messages","toConsumableArray","MessageParser","toLowerCase","ChatBot","style","maxWidth","build_default","messageParser","App","react_router_dom","react_router","path","element","loginpage_SignIn","chatbot_ChatBot","ReactDOM","createRoot","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.77db3b2b.chunk.js","sourcesContent":["/*\r\nimport React from 'react';\r\nimport {useNavigate} from 'react-router-dom'\r\n\r\nexport default function SignIn() {\r\n  const navigate = useNavigate()\r\n  return(\r\n    <>\r\n    <div>Home Page</div>\r\n    <button onClick={() => navigate('chatbot')}>Signin</button>\r\n    </>\r\n  );\r\n}\r\n*/\r\n\r\n//import ReactDOM from \"react-dom\";\r\nimport React, { useState } from \"react\";\r\nimport {useNavigate} from 'react-router-dom'\r\n\r\nimport \"./styles.css\";\r\n\r\nfunction SignIn() {\r\n\r\n  const navigate = useNavigate()\r\n  // React States\r\n  const [errorMessages, setErrorMessages] = useState({});\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n  // User Login info\r\n  const database = [\r\n    {\r\n      username: \"user1\",\r\n      password: \"pass1\"\r\n    },\r\n    {\r\n      username: \"user2\",\r\n      password: \"pass2\"\r\n    }\r\n  ];\r\n\r\n  const errors = {\r\n    uname: \"invalid username\",\r\n    pass: \"invalid password\"\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    var { uname, pass } = document.forms[0];\r\n\r\n    const userData = database.find((user) => user.username === uname.value);\r\n\r\n    if (userData) {\r\n      if (userData.password !== pass.value) {\r\n        setErrorMessages({ name: \"pass\", message: errors.pass });\r\n      } else {\r\n        setIsSubmitted(true);\r\n      }\r\n    } else {\r\n      setErrorMessages({ name: \"uname\", message: errors.uname });\r\n    }\r\n  };\r\n\r\n  // Generate JSX code for error message\r\n  const renderErrorMessage = (name) =>\r\n    name === errorMessages.name && (\r\n      <div className=\"error\">{errorMessages.message}</div>\r\n    );\r\n\r\n    // JSX code for login form\r\n  const renderForm = (\r\n    <div className=\"form\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-container\">\r\n          <label>Username </label>\r\n          <input type=\"text\" name=\"uname\" required />\r\n          {renderErrorMessage(\"uname\")}\r\n        </div>\r\n        <div className=\"input-container\">\r\n          <label>Password </label>\r\n          <input type=\"password\" name=\"pass\" required />\r\n          {renderErrorMessage(\"pass\")}\r\n        </div>\r\n        <div className=\"button-container\">\r\n          <input type=\"submit\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"login-form\">\r\n        <div className=\"title\">SignIn</div>\r\n        {isSubmitted ? navigate('chatbot') : renderForm}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://chatbot-fast-server.herokuapp.com\",\r\n});","\r\nclass language {\r\n    constructor() {\r\n        this.language = \"english\"\r\n    }\r\n\r\n    getLanguage() {\r\n        return this.language\r\n    }\r\n\r\n    setLanguage(lang) {\r\n        if (lang === 1){\r\n        this.language = \"telugu\"\r\n        }\r\n        if (lang === 2){\r\n        this.language = \"hindi\"\r\n            }\r\n        if (lang === 3){\r\n            this.language = \"english\"\r\n        }\r\n        if (lang === 4){\r\n            this.language = \"tamil\"\r\n        }\r\n        if (lang === 5){\r\n            this.language = \"kannada\"\r\n        }\r\n    }\r\n}\r\n\r\n//export default language\r\n\r\nvar a = new language()\r\n\r\nexport default a","import React from \"react\";\nimport {useState,useEffect} from \"react\";\nimport api from \"../api/retriver\"\nimport a from \"../api/language\"\nimport \"./main.css\";\n\nconst text1 = [\n  \"Steps to place an order online or offline stores\",\n  \"Finding nearest Lenskart Store in your surroundings\",\n  \"Cancellation of Ordered Items with order number\",\n  \"Making an appointment for a home eye test and try-on\",\n  \"Select different input and display language\",\n  \"Logout from your lenskart account\"\n]\n\nconst Options = (props) => {\n  const [text,setText] = useState([]) \n  const get_translation = async (message,language) => {\n    const response = await api.get(\"/translation\",{\n      params : {\n      msg: ''.concat(message),\n      lang: language\n    }})\n    return setText(response.data);\n  };\n\n  useEffect(() => {get_translation(text1,a.getLanguage())},[]);\n\n  var text_0 = text[0]\n  var text_1 = text[1]\n  var text_2 = text[2]\n  var text_3 = text[3]\n  var text_4 = text[4]\n  var text_5 = text[5]\n\n  const options = [\n    {\n      text: text_0,\n      handler: props.actionProvider.starting_option_1,\n      id: 1,\n    },\n    { \n      text: text_1, \n      handler: props.actionProvider.starting_option_2, \n      id: 2,\n    },\n    { \n      text: text_2, \n      handler: props.actionProvider.starting_option_3, \n      id: 3,\n    },\n    { \n      text: text_3, \n      handler: props.actionProvider.starting_option_4, \n      id: 4,\n    },\n    { \n      text: text_4, \n      handler: props.actionProvider.starting_option_5, \n      id: 5,\n    },\n    { \n      text: text_5, \n      handler: props.actionProvider.starting_option_6, \n      id: 6,\n    }\n  ];\n\n  const buttonsMarkup = options.map((option) => (\n    <button key={option.id} onClick={option.handler} className=\"option-button\">\n      {option.text}\n    </button>\n  ));\n\n  return <div className=\"options-container\">{buttonsMarkup}</div>;\n};\n\nexport default Options;\n","import React from \"react\";\r\nimport {useState,useEffect} from \"react\";\r\nimport api from \"../api/retriver\"\r\nimport a from \"../api/language\"\r\nimport \"./main.css\";\r\n\r\nconst text11 = [\r\n  \"Place an order online\",\r\n  \"Place an order offline\"\r\n]\r\n\r\nconst Options1 = (props) => {\r\n  const [text1,setText] = useState({})  \r\n  const get_translation = async (message,language) => {\r\n    const response = await api.get(\"/translation\",{\r\n      params : {\r\n      msg: ''.concat(message),\r\n      lang: language\r\n    }})\r\n    return setText(response.data);\r\n  };\r\n\r\n   useEffect(() => {get_translation(text11,a.getLanguage())},[]);\r\n  const options= [\r\n    {\r\n      text: text1[0],\r\n      handler: props.actionProvider.place_an_order_online,\r\n      id: 1,\r\n    },\r\n    { \r\n      text: text1[1], \r\n      handler: props.actionProvider.place_an_order_offline, \r\n      id: 2,\r\n    },\r\n  ];\r\n\r\n  const buttonsMarkup = options.map((option) => (\r\n    <button key={option.id} onClick={option.handler} className=\"option-button\">\r\n      {option.text}\r\n    </button>\r\n  ));\r\n\r\n  return <div className=\"order-options-container\">{buttonsMarkup}</div>;\r\n};\r\n\r\nexport default Options1;\r\n","import React from \"react\";\r\nimport api from \"../api/retriver\"\r\nimport a from \"../api/language\"\r\nimport \"./main.css\";\r\nimport {useState,useEffect} from \"react\";\r\n\r\nconst text1 = [\r\n  \"Yes\",\r\n  \"No\"\r\n]\r\n\r\nconst Options3 = (props) => \r\n{\r\n  const [text,setText] = useState({})  \r\n\r\n  const get_translation = async (message,language) => {\r\n    const response = await api.get(\"/translation\",{\r\n      params : {\r\n      msg: ''.concat(message),\r\n      lang: language\r\n    }})\r\n    return setText(response.data);\r\n  };\r\n\r\n  useEffect(() => {get_translation(text1,a.getLanguage())},[]);\r\n\r\n  useEffect(() => {\r\n    \r\n}, []);\r\n\r\n  const options = [\r\n    {\r\n      text: text[0],\r\n      handler: props.actionProvider.cancel_order_yes,\r\n      id: 1,\r\n    },\r\n    { \r\n      text: text[1], \r\n      handler: props.actionProvider.cancel_order_no,\r\n      id: 2,\r\n    }\r\n  ];\r\n\r\n  const buttonsMarkup = options.map((option) => (\r\n    <button key={option.id} onClick={option.handler} className=\"option-button\">\r\n      {option.text}\r\n    </button>\r\n  ));\r\n\r\n  return <div className=\"options-container\">{buttonsMarkup}</div>;\r\n};\r\n\r\nexport default Options3;\r\n","import React from \"react\";\r\nimport api from \"../api/retriver\"\r\nimport a from \"../api/language\"\r\nimport \"./main.css\";\r\nimport {useState,useEffect} from \"react\";\r\n\r\nconst text1 = [\r\n  \"Telugu\",\r\n  \"Hindi\",\r\n  \"English\",\r\n  \"Tamil\",\r\n  \"kannada\"\r\n]\r\n\r\nconst Options5 = (props) => \r\n{\r\n  const [text,setText] = useState({})  \r\n\r\n  const get_translation = async (message,language) => {\r\n    const response = await api.get(\"/translation\",{\r\n      params : {\r\n      msg: ''.concat(message),\r\n      lang: language\r\n    }})\r\n    return setText(response.data);\r\n  };\r\n\r\n  useEffect(() => {get_translation(text1,a.getLanguage())},[]);\r\n\r\n  useEffect(() => {\r\n    \r\n}, []);\r\n\r\n  const options = [\r\n    {\r\n      text: text[0],\r\n      handler: props.actionProvider.language_option_1,\r\n      id: 1,\r\n    },\r\n    { \r\n      text: text[1], \r\n      handler: props.actionProvider.language_option_2,\r\n      id: 2,\r\n    },\r\n    {\r\n      text: text[2],\r\n      handler: props.actionProvider.language_option_3,\r\n      id: 3,\r\n    },\r\n    {\r\n      text: text[3],\r\n      handler: props.actionProvider.language_option_4,\r\n      id: 4,\r\n    },\r\n    {\r\n      text: text[4],\r\n      handler: props.actionProvider.language_option_5,\r\n      id: 5,\r\n    }\r\n  ];\r\n\r\n  const buttonsMarkup = options.map((option) => (\r\n    <button key={option.id} onClick={option.handler} className=\"option-button\">\r\n      {option.text}\r\n    </button>\r\n  ));\r\n\r\n  return <div className=\"options-container\">{buttonsMarkup}</div>;\r\n};\r\n\r\nexport default Options5;\r\n","import React from \"react\";\r\nimport api from \"../api/retriver\"\r\nimport a from \"../api/language\"\r\nimport \"./main.css\";\r\nimport {useState,useEffect} from \"react\";\r\n\r\nconst text1 = [\r\n  \"Home Eye Test\",\r\n  \"Try On\"\r\n]\r\n\r\nconst Options4 = (props) => \r\n{\r\n  const [text,setText] = useState({})  \r\n\r\n  const get_translation = async (message,language) => {\r\n    const response = await api.get(\"/translation\",{\r\n      params : {\r\n      msg: ''.concat(message),\r\n      lang: language\r\n    }})\r\n    return setText(response.data);\r\n  };\r\n\r\n  useEffect(() => {get_translation(text1,a.getLanguage())},[]);\r\n\r\n  const options = [\r\n    {\r\n      text: text[0],\r\n      handler: props.actionProvider.home_eye_test,\r\n      id: 1,\r\n    },\r\n    { \r\n      text: text[1], \r\n      handler: props.actionProvider.try_on,\r\n      id: 2,\r\n    }\r\n  ];\r\n\r\n  const buttonsMarkup = options.map((option) => (\r\n    <button key={option.id} onClick={option.handler} className=\"option-button\">\r\n      {option.text}\r\n    </button>\r\n  ));\r\n\r\n  return <div className=\"options-container\">{buttonsMarkup}</div>;\r\n};\r\n\r\nexport default Options4;\r\n","import React from \"react\";\r\nimport { createChatBotMessage } from \"react-chatbot-kit\";\r\n\r\nimport Options from \"../components/Options\";\r\nimport Options1 from \"../components/Options1\";\r\nimport Options3 from \"../components/Options3\";\r\nimport Options5 from \"../components/Options5\";\r\nimport Options4 from \"../components/Options4\";\r\n\r\n\r\nconst config = {\r\n  botName: \"Sara\",\r\n  initialMessages: [\r\n    createChatBotMessage(\"Hello, I'm Sara. How may I help you today ? Do you need help with: \", \r\n    {\r\n      widget: \"options\",\r\n    }),\r\n  ],\r\n  widgets: \r\n  [\r\n    {\r\n      widgetName: \"options\",\r\n      widgetFunc: (props) => <Options {...props} />\r\n    },\r\n    {\r\n      widgetName: \"options1\",\r\n      widgetFunc: (props) => <Options1 {...props} />\r\n    },\r\n    {\r\n      widgetName: \"options5\",\r\n      widgetFunc: (props) => <Options5 {...props} />\r\n    },\r\n    {\r\n      widgetName: \"options3\",\r\n      widgetFunc: (props) => <Options3 {...props} />\r\n    },\r\n    {\r\n      widgetName: \"options4\",\r\n      widgetFunc: (props) => <Options4 {...props} />\r\n    }\r\n  ],\r\n};\r\n\r\nexport default config;","\r\nimport a from \"../api/language\"\r\nimport api from \"../api/retriver\"\r\nimport {useNavigate} from 'react-router-dom'\r\n\r\nconst text1 = [\r\n  \"Steps to place an order online or offline stores\",\r\n  \"Finding nearest Lenskart Store in your surroundings\",\r\n  \"Cancellation of Ordered Items with order number\",\r\n  \"Making an appointment for a home eye test and try-on\",\r\n  \"Select different input and display language\",\r\n  \"Signout from your account\"\r\n]\r\nclass ActionProvider  {\r\n    constructor(createChatBotMessage, setStateFunc) {\r\n      this.createChatBotMessage = createChatBotMessage;\r\n      this.setState = setStateFunc;\r\n      this.ids = [\"100011\",\"100012\",\"100013\",\"100014\",\"100015\"]\r\n      this.order_id = \"\"\r\n      this.navigate = useNavigate()\r\n    }\r\n\r\n\r\n      get_translation = async (message,language) => {\r\n        const response = await api.get(\"/translater\",{\r\n          params : {\r\n          msg: message,\r\n          lang: language\r\n        }})\r\n        return response\r\n      };\r\n\r\n    start_again = () => {\r\n      this.get_translation(\"Hello, I'm Sara. How may I help you today ? Do you need help with: \",a.getLanguage()).then((response) => {\r\n        const message = this.createChatBotMessage(response.data, {widget: \"options\",});\r\n        this.addMessageToState(message)\r\n      })\r\n    };\r\n\r\n\r\n    /*------------------------------------------------Options-----------------------------------------------*/ \r\n    \r\n    starting_option_1 = () => {\r\n      this.get_translation(text1[0],a.getLanguage()).then((response) => {\r\n        const message = this.createChatBotMessage(response.data, {widget: \"options1\",});\r\n        this.addMessageToState(message)\r\n      })\r\n    };\r\n\r\n    starting_option_2 = () => {\r\n      this.get_translation(\"Please enter your area pincode number\",a.getLanguage()).then((response) => {\r\n        const message = this.createChatBotMessage(response.data);\r\n      this.addMessageToState(message);\r\n      })\r\n    };\r\n\r\n    starting_option_3 = () => {\r\n      this.get_translation(\"Please enter the order-id for your order\",a.getLanguage()).then((response) => {\r\n        const message = this.createChatBotMessage(response.data);\r\n      this.addMessageToState(message);\r\n      })\r\n    };\r\n\r\n    starting_option_4 = () => {\r\n      this.get_translation(text1[3],a.getLanguage()).then((response) => {\r\n        const message = this.createChatBotMessage(response.data, {widget: \"options4\",});\r\n        this.addMessageToState(message)\r\n      })\r\n    };\r\n\r\n    starting_option_5 = () => {\r\n      this.get_translation(text1[4],a.getLanguage()).then((response) => {\r\n        const message = this.createChatBotMessage(response.data, {widget: \"options5\",});\r\n        this.addMessageToState(message)\r\n      })\r\n    };\r\n\r\n    starting_option_6 = () => {\r\n      this.get_translation(text1[5],a.getLanguage()).then((response) => {\r\n        const message = this.createChatBotMessage(response.data, {widget: \"options5\",});\r\n        this.addMessageToState(message)\r\n        this.navigate('/')\r\n      })\r\n    };\r\n\r\n   /*------------------------------------------------Option 1-----------------------------------------------*/ \r\n\r\n    place_an_order_online = () => {\r\n      this.get_translation(\"Please visit the website lenskart.com for details\",a.getLanguage()).then((response) => {\r\n        const message = this.createChatBotMessage(response.data);\r\n        this.addMessageToState(message)\r\n      })\r\n    };\r\n\r\n    place_an_order_offline = () => {\r\n      this.get_translation('Please contact our nearby store and make an order or please contact to '+\r\n      'our customer care 2014587400 or visit store.lenskart.com for details.',a.getLanguage()).then((response) => {\r\n        const message = this.createChatBotMessage(response.data);\r\n        this.addMessageToState(message)\r\n      })\r\n    };\r\n\r\n     /*------------------------------------------------Option 2-----------------------------------------------*/ \r\n\r\n     locate_store = (lowercase) => {\r\n      const get_translation = async (message,language) => {\r\n        const response = await api.get(\"/address\",{\r\n          params : {\r\n            pincode: message,\r\n          lang: language\r\n        }})\r\n        return response\r\n      };\r\n      get_translation(lowercase,a.getLanguage()).then((response) => {\r\n        const message = this.createChatBotMessage(response.data)\r\n        this.addMessageToState(message)\r\n      })\r\n    } \r\n\r\n    /*------------------------------------------------Option 3-----------------------------------------------*/\r\n    \r\n    cancel_order = (lowercase) => {\r\n      if (this.ids.includes(lowercase)) {\r\n        this.order_id = lowercase\r\n        this.get_translation(\"Do you want to cancel the order , type yes or no\",a.getLanguage()).then((response) => {\r\n          const message = this.createChatBotMessage(response.data,{widget: \"options3\",})\r\n          this.addMessageToState(message)\r\n        })\r\n      }\r\n      else{\r\n        const message = this.createChatBotMessage(\"Please enter the correct order-id\");\r\n          this.addMessageToState(message);\r\n      }\r\n    }\r\n    cancel_order_yes = () => {\r\n      var index = this.ids.indexOf(this.order_id)\r\n      delete this.ids[index];\r\n      this.get_translation(\"Order deleted Sucessfully\",a.getLanguage()).then((response) => {\r\n        const message = this.createChatBotMessage(response.data)\r\n        this.addMessageToState(message)\r\n      })\r\n    }\r\n\r\n    cancel_order_no = () => {\r\n      this.get_translation(\"Cancellation Process terminated Sucessfully\",a.getLanguage()).then((response) => {\r\n        const message = this.createChatBotMessage(response.data)\r\n        this.addMessageToState(message)\r\n      })\r\n    }\r\n\r\n    /*------------------------------------------------Option 4-----------------------------------------------*/ \r\n\r\n    home_eye_test = () => {\r\n      this.get_translation(\"Please contact our Customer service centre to get an appointment - contact 180-100-1111\",a.getLanguage()).then((response) => {\r\n        const message = this.createChatBotMessage(response.data)\r\n        this.addMessageToState(message)\r\n      })\r\n    }\r\n\r\n    try_on = () => {\r\n      this.get_translation(\"This feature is available in android or the ios app , please download the app to see the feature\",a.getLanguage()).then((response) => {\r\n        const message = this.createChatBotMessage(response.data)\r\n        this.addMessageToState(message)\r\n      })\r\n    }\r\n\r\n    /*------------------------------------------------Option 5-----------------------------------------------*/ \r\n\r\n    language_option_1 = () => {\r\n      a.setLanguage(1);\r\n      console.log(a.getLanguage())\r\n      this.get_translation(\"Language changed to telugu\",a.getLanguage()).then((response) => {\r\n        const message = this.createChatBotMessage(response.data)\r\n        this.addMessageToState(message)\r\n        this.start_again()\r\n      })\r\n    }\r\n\r\n    language_option_2 = () => {\r\n      a.setLanguage(2);\r\n      console.log(a.getLanguage())\r\n      this.get_translation(\"Language changed to hindi\",a.getLanguage()).then((response) => {\r\n        const message = this.createChatBotMessage(response.data)\r\n        this.addMessageToState(message)\r\n        this.start_again()\r\n      })\r\n    }\r\n\r\n    language_option_3 = () => {\r\n      a.setLanguage(3);\r\n      console.log(a.getLanguage())\r\n      this.get_translation(\"Language changed to english\",a.getLanguage()).then((response) => {\r\n        const message = this.createChatBotMessage(response.data)\r\n        this.addMessageToState(message)\r\n        this.start_again()\r\n      })\r\n    }\r\n\r\n    language_option_4 = () => {\r\n      a.setLanguage(4);\r\n      console.log(a.getLanguage())\r\n      this.get_translation(\"Language changed to tamil\",a.getLanguage()).then((response) => {\r\n        const message = this.createChatBotMessage(response.data)\r\n        this.addMessageToState(message)\r\n        this.start_again()\r\n      })\r\n    }\r\n\r\n    language_option_5 = () => {\r\n      a.setLanguage(5);\r\n      console.log(a.getLanguage())\r\n      this.get_translation(\"Language changed to kannada\",a.getLanguage()).then((response) => {\r\n        const message = this.createChatBotMessage(response.data)\r\n        this.addMessageToState(message)\r\n        this.start_again()\r\n      })\r\n    }\r\n\r\n    addMessageToState = (message) => {\r\n      this.setState((prevState) => ({\r\n        ...prevState,\r\n        messages: [...prevState.messages, message],\r\n      }));\r\n    };\r\n  }\r\n  \r\n  export default ActionProvider;","class MessageParser {\r\n    constructor(actionProvider) {\r\n      this.actionProvider = actionProvider;\r\n    }\r\n  \r\n    parse(message) {\r\n      //console.log(message);\r\n      const lowercase = message.toLowerCase();\r\n\r\n      if(lowercase.includes(\"start\")){\r\n        this.actionProvider.start_again();\r\n      }\r\n\r\n      if(lowercase.includes(\"5000\")){\r\n        this.actionProvider.locate_store(lowercase);\r\n      }\r\n\r\n      if(lowercase.includes(\"1000\")){\r\n        this.actionProvider.cancel_order(lowercase);\r\n      }\r\n\r\n      if (lowercase.includes(\"yes\")){\r\n        this.actionProvider.cancel_order_yes();\r\n      }\r\n\r\n      if (lowercase.includes(\"no\")){\r\n        this.actionProvider.cancel_order_no();\r\n      }\r\n    }\r\n  }\r\n  \r\n  export default MessageParser;","import React from \"react\";\r\n\r\nimport config from \"./config\";\r\nimport ActionProvider from \"./ActionProvider\";\r\nimport MessageParser from \"./MessageParser\";\r\n\r\nimport Chatbot from \"react-chatbot-kit\";\r\nimport 'react-chatbot-kit/build/main.css';\r\n\r\nimport './main.css'\r\n\r\nfunction ChatBot() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div style={{ maxWidth: \"300px\" }}>\r\n          <Chatbot config={config} actionProvider={ActionProvider} messageParser={MessageParser} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default ChatBot","import React from \"react\";\nimport \"./App.css\";\nimport SignIn  from './loginpage/SignIn'\n//import SignOut  from './loginpage/SignOut'\nimport ChatBot from './chatbot/ChatBot'\n\n\nimport {BrowserRouter,Routes,Route} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"wrapper\">\n      <BrowserRouter>\n      <Routes>\n        <Route path=\"\" element={<SignIn />} />\n        <Route path=\"/chatbot\" element={<ChatBot />} />\n      </Routes>\n    </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <App />\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}