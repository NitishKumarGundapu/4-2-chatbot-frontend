{"version":3,"sources":["api/retriver.jsx","api/language.jsx","components/Options.jsx","components/Options1.jsx","components/Options3.jsx","components/Options5.jsx","components/Options4.jsx","chatbot/config.js","chatbot/ActionProvider.js","chatbot/MessageParser.js","App.js","index.js"],"names":["axios","create","baseURL","a","language","Object","classCallCheck","this","lang","text1","Options","props","_useState","useState","_useState2","slicedToArray","text","setText","get_translation","_ref","asyncToGenerator","regenerator_default","mark","_callee","message","response","wrap","_context","prev","next","api","get","params","msg","concat","sent","abrupt","data","stop","_x","_x2","apply","arguments","useEffect","getLanguage","text_0","text_1","text_2","text_3","text_4","buttonsMarkup","handler","actionProvider","starting_option_1","id","starting_option_2","starting_option_3","starting_option_4","starting_option_5","map","option","react_default","createElement","key","onClick","className","text11","Options1","place_an_order_online","place_an_order_offline","Options3","cancel_order_yes","cancel_order_no","Options5","language_option_1","language_option_2","language_option_3","language_option_4","language_option_5","Options4","home_eye_test","try_on","config","botName","initialMessages","createChatBotMessage","widget","widgets","widgetName","widgetFunc","components_Options","components_Options1","components_Options5","components_Options3","components_Options4","ActionProvider","setStateFunc","_this","start_again","then","addMessageToState","locate_store","lowercase","_ref2","_callee2","_context2","pincode","_x3","_x4","cancel_order","ids","includes","order_id","index","indexOf","setLanguage","console","log","setState","prevState","objectSpread","messages","toConsumableArray","MessageParser","toLowerCase","App","style","maxWidth","build_default","messageParser","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.8898e6b4.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://chatbot-fast-server.herokuapp.com\",\r\n});","\r\nclass language {\r\n    constructor() {\r\n        this.language = \"english\"\r\n    }\r\n\r\n    getLanguage() {\r\n        return this.language\r\n    }\r\n\r\n    setLanguage(lang) {\r\n        if (lang === 1){\r\n        this.language = \"telugu\"\r\n        }\r\n        if (lang === 2){\r\n        this.language = \"hindi\"\r\n            }\r\n        if (lang === 3){\r\n            this.language = \"english\"\r\n        }\r\n        if (lang === 4){\r\n            this.language = \"tamil\"\r\n        }\r\n        if (lang === 5){\r\n            this.language = \"kannada\"\r\n        }\r\n    }\r\n}\r\n\r\n//export default language\r\n\r\nvar a = new language()\r\n\r\nexport default a","import React from \"react\";\nimport {useState,useEffect} from \"react\";\nimport api from \"../api/retriver\"\nimport a from \"../api/language\"\nimport \"./main.css\";\n\nconst text1 = [\n  \"Steps to place an order online or offline stores\",\n  \"Finding nearest Lenskart Store in your surroundings\",\n  \"Cancellation of Ordered Items with order number\",\n  \"Making an appointment for a home eye test and try-on\",\n  \"Select different input and display language\",\n]\n\nconst Options = (props) => {\n  const [text,setText] = useState([]) \n  const get_translation = async (message,language) => {\n    const response = await api.get(\"/translation\",{\n      params : {\n      msg: ''.concat(message),\n      lang: language\n    }})\n    return setText(response.data);\n  };\n\n  useEffect(() => {get_translation(text1,a.getLanguage())},[]);\n\n  var text_0 = text[0]\n  var text_1 = text[1]\n  var text_2 = text[2]\n  var text_3 = text[3]\n  var text_4 = text[4]\n\n  const options = [\n    {\n      text: text_0,\n      handler: props.actionProvider.starting_option_1,\n      id: 1,\n    },\n    { \n      text: text_1, \n      handler: props.actionProvider.starting_option_2, \n      id: 2,\n    },\n    { \n      text: text_2, \n      handler: props.actionProvider.starting_option_3, \n      id: 3,\n    },\n    { \n      text: text_3, \n      handler: props.actionProvider.starting_option_4, \n      id: 4,\n    },\n    { \n      text: text_4, \n      handler: props.actionProvider.starting_option_5, \n      id: 5,\n    }\n  ];\n\n  const buttonsMarkup = options.map((option) => (\n    <button key={option.id} onClick={option.handler} className=\"option-button\">\n      {option.text}\n    </button>\n  ));\n\n  return <div className=\"options-container\">{buttonsMarkup}</div>;\n};\n\nexport default Options;\n","import React from \"react\";\r\nimport {useState,useEffect} from \"react\";\r\nimport api from \"../api/retriver\"\r\nimport a from \"../api/language\"\r\nimport \"./main.css\";\r\n\r\nconst text11 = [\r\n  \"Place an order online\",\r\n  \"Place an order offline\"\r\n]\r\n\r\nconst Options1 = (props) => {\r\n  const [text1,setText] = useState({})  \r\n  const get_translation = async (message,language) => {\r\n    const response = await api.get(\"/translation\",{\r\n      params : {\r\n      msg: ''.concat(message),\r\n      lang: language\r\n    }})\r\n    return setText(response.data);\r\n  };\r\n\r\n   useEffect(() => {get_translation(text11,a.getLanguage())},[]);\r\n  const options= [\r\n    {\r\n      text: text1[0],\r\n      handler: props.actionProvider.place_an_order_online,\r\n      id: 1,\r\n    },\r\n    { \r\n      text: text1[1], \r\n      handler: props.actionProvider.place_an_order_offline, \r\n      id: 2,\r\n    },\r\n  ];\r\n\r\n  const buttonsMarkup = options.map((option) => (\r\n    <button key={option.id} onClick={option.handler} className=\"option-button\">\r\n      {option.text}\r\n    </button>\r\n  ));\r\n\r\n  return <div className=\"order-options-container\">{buttonsMarkup}</div>;\r\n};\r\n\r\nexport default Options1;\r\n","import React from \"react\";\r\nimport api from \"../api/retriver\"\r\nimport a from \"../api/language\"\r\nimport \"./main.css\";\r\nimport {useState,useEffect} from \"react\";\r\n\r\nconst text1 = [\r\n  \"Yes\",\r\n  \"No\"\r\n]\r\n\r\nconst Options3 = (props) => \r\n{\r\n  const [text,setText] = useState({})  \r\n\r\n  const get_translation = async (message,language) => {\r\n    const response = await api.get(\"/translation\",{\r\n      params : {\r\n      msg: ''.concat(message),\r\n      lang: language\r\n    }})\r\n    return setText(response.data);\r\n  };\r\n\r\n  useEffect(() => {get_translation(text1,a.getLanguage())},[]);\r\n\r\n  useEffect(() => {\r\n    \r\n}, []);\r\n\r\n  const options = [\r\n    {\r\n      text: text[0],\r\n      handler: props.actionProvider.cancel_order_yes,\r\n      id: 1,\r\n    },\r\n    { \r\n      text: text[1], \r\n      handler: props.actionProvider.cancel_order_no,\r\n      id: 2,\r\n    }\r\n  ];\r\n\r\n  const buttonsMarkup = options.map((option) => (\r\n    <button key={option.id} onClick={option.handler} className=\"option-button\">\r\n      {option.text}\r\n    </button>\r\n  ));\r\n\r\n  return <div className=\"options-container\">{buttonsMarkup}</div>;\r\n};\r\n\r\nexport default Options3;\r\n","import React from \"react\";\r\nimport api from \"../api/retriver\"\r\nimport a from \"../api/language\"\r\nimport \"./main.css\";\r\nimport {useState,useEffect} from \"react\";\r\n\r\nconst text1 = [\r\n  \"Telugu\",\r\n  \"Hindi\",\r\n  \"English\",\r\n  \"Tamil\",\r\n  \"kannada\"\r\n]\r\n\r\nconst Options5 = (props) => \r\n{\r\n  const [text,setText] = useState({})  \r\n\r\n  const get_translation = async (message,language) => {\r\n    const response = await api.get(\"/translation\",{\r\n      params : {\r\n      msg: ''.concat(message),\r\n      lang: language\r\n    }})\r\n    return setText(response.data);\r\n  };\r\n\r\n  useEffect(() => {get_translation(text1,a.getLanguage())},[]);\r\n\r\n  useEffect(() => {\r\n    \r\n}, []);\r\n\r\n  const options = [\r\n    {\r\n      text: text[0],\r\n      handler: props.actionProvider.language_option_1,\r\n      id: 1,\r\n    },\r\n    { \r\n      text: text[1], \r\n      handler: props.actionProvider.language_option_2,\r\n      id: 2,\r\n    },\r\n    {\r\n      text: text[2],\r\n      handler: props.actionProvider.language_option_3,\r\n      id: 3,\r\n    },\r\n    {\r\n      text: text[3],\r\n      handler: props.actionProvider.language_option_4,\r\n      id: 4,\r\n    },\r\n    {\r\n      text: text[4],\r\n      handler: props.actionProvider.language_option_5,\r\n      id: 5,\r\n    }\r\n  ];\r\n\r\n  const buttonsMarkup = options.map((option) => (\r\n    <button key={option.id} onClick={option.handler} className=\"option-button\">\r\n      {option.text}\r\n    </button>\r\n  ));\r\n\r\n  return <div className=\"options-container\">{buttonsMarkup}</div>;\r\n};\r\n\r\nexport default Options5;\r\n","import React from \"react\";\r\nimport api from \"../api/retriver\"\r\nimport a from \"../api/language\"\r\nimport \"./main.css\";\r\nimport {useState,useEffect} from \"react\";\r\n\r\nconst text1 = [\r\n  \"Home Eye Test\",\r\n  \"Try On\"\r\n]\r\n\r\nconst Options4 = (props) => \r\n{\r\n  const [text,setText] = useState({})  \r\n\r\n  const get_translation = async (message,language) => {\r\n    const response = await api.get(\"/translation\",{\r\n      params : {\r\n      msg: ''.concat(message),\r\n      lang: language\r\n    }})\r\n    return setText(response.data);\r\n  };\r\n\r\n  useEffect(() => {get_translation(text1,a.getLanguage())},[]);\r\n\r\n  const options = [\r\n    {\r\n      text: text[0],\r\n      handler: props.actionProvider.home_eye_test,\r\n      id: 1,\r\n    },\r\n    { \r\n      text: text[1], \r\n      handler: props.actionProvider.try_on,\r\n      id: 2,\r\n    }\r\n  ];\r\n\r\n  const buttonsMarkup = options.map((option) => (\r\n    <button key={option.id} onClick={option.handler} className=\"option-button\">\r\n      {option.text}\r\n    </button>\r\n  ));\r\n\r\n  return <div className=\"options-container\">{buttonsMarkup}</div>;\r\n};\r\n\r\nexport default Options4;\r\n","import React from \"react\";\r\nimport { createChatBotMessage } from \"react-chatbot-kit\";\r\n\r\nimport Options from \"../components/Options\";\r\nimport Options1 from \"../components/Options1\";\r\nimport Options3 from \"../components/Options3\";\r\nimport Options5 from \"../components/Options5\";\r\nimport Options4 from \"../components/Options4\";\r\n\r\n\r\nconst config = {\r\n  botName: \"Sara\",\r\n  initialMessages: [\r\n    createChatBotMessage(\"Hello, I'm Sara. How may I help you today ? Do you need help with: \", \r\n    {\r\n      widget: \"options\",\r\n    }),\r\n  ],\r\n  widgets: \r\n  [\r\n    {\r\n      widgetName: \"options\",\r\n      widgetFunc: (props) => <Options {...props} />\r\n    },\r\n    {\r\n      widgetName: \"options1\",\r\n      widgetFunc: (props) => <Options1 {...props} />\r\n    },\r\n    {\r\n      widgetName: \"options5\",\r\n      widgetFunc: (props) => <Options5 {...props} />\r\n    },\r\n    {\r\n      widgetName: \"options3\",\r\n      widgetFunc: (props) => <Options3 {...props} />\r\n    },\r\n    {\r\n      widgetName: \"options4\",\r\n      widgetFunc: (props) => <Options4 {...props} />\r\n    }\r\n  ],\r\n};\r\n\r\nexport default config;","\r\nimport a from \"../api/language\"\r\nimport api from \"../api/retriver\"\r\n\r\nconst text1 = [\r\n  \"Steps to place an order online or offline stores\",\r\n  \"Finding nearest Lenskart Store in your surroundings\",\r\n  \"Cancellation of Ordered Items with order number\",\r\n  \"Making an appointment for a home eye test and try-on\",\r\n  \"Select different input and display language\",\r\n]\r\n\r\n\r\nclass ActionProvider  {\r\n    constructor(createChatBotMessage, setStateFunc) {\r\n      this.createChatBotMessage = createChatBotMessage;\r\n      this.setState = setStateFunc;\r\n      this.ids = [\"100011\",\"100012\",\"100013\",\"100014\",\"100015\"]\r\n      this.order_id = \"\"\r\n    }\r\n\r\n\r\n      get_translation = async (message,language) => {\r\n        const response = await api.get(\"/translater\",{\r\n          params : {\r\n          msg: message,\r\n          lang: language\r\n        }})\r\n        return response\r\n      };\r\n\r\n    start_again = () => {\r\n      this.get_translation(\"Hello, I'm Sara. How may I help you today ? Do you need help with: \",a.getLanguage()).then((response) => {\r\n        const message = this.createChatBotMessage(response.data, {widget: \"options\",});\r\n        this.addMessageToState(message)\r\n      })\r\n    };\r\n\r\n\r\n    /*------------------------------------------------Options-----------------------------------------------*/ \r\n    \r\n    starting_option_1 = () => {\r\n      this.get_translation(text1[0],a.getLanguage()).then((response) => {\r\n        const message = this.createChatBotMessage(response.data, {widget: \"options1\",});\r\n        this.addMessageToState(message)\r\n      })\r\n    };\r\n\r\n    starting_option_2 = () => {\r\n      this.get_translation(\"Please enter your area pincode number\",a.getLanguage()).then((response) => {\r\n        const message = this.createChatBotMessage(response.data);\r\n      this.addMessageToState(message);\r\n      })\r\n    };\r\n\r\n    starting_option_3 = () => {\r\n      this.get_translation(\"Please enter the order-id for your order\",a.getLanguage()).then((response) => {\r\n        const message = this.createChatBotMessage(response.data);\r\n      this.addMessageToState(message);\r\n      })\r\n    };\r\n\r\n    starting_option_4 = () => {\r\n      this.get_translation(text1[3],a.getLanguage()).then((response) => {\r\n        const message = this.createChatBotMessage(response.data, {widget: \"options4\",});\r\n        this.addMessageToState(message)\r\n      })\r\n    };\r\n\r\n    starting_option_5 = () => {\r\n      this.get_translation(text1[4],a.getLanguage()).then((response) => {\r\n        const message = this.createChatBotMessage(response.data, {widget: \"options5\",});\r\n        this.addMessageToState(message)\r\n      })\r\n    };\r\n\r\n   /*------------------------------------------------Option 1-----------------------------------------------*/ \r\n\r\n    place_an_order_online = () => {\r\n      this.get_translation(\"Please visit the website lenskart.com for details\",a.getLanguage()).then((response) => {\r\n        const message = this.createChatBotMessage(response.data);\r\n        this.addMessageToState(message)\r\n      })\r\n    };\r\n\r\n    place_an_order_offline = () => {\r\n      this.get_translation('Please contact our nearby store and make an order or please contact to '+\r\n      'our customer care 2014587400 or visit store.lenskart.com for details.',a.getLanguage()).then((response) => {\r\n        const message = this.createChatBotMessage(response.data);\r\n        this.addMessageToState(message)\r\n      })\r\n    };\r\n\r\n     /*------------------------------------------------Option 2-----------------------------------------------*/ \r\n\r\n     locate_store = (lowercase) => {\r\n      const get_translation = async (message,language) => {\r\n        const response = await api.get(\"/address\",{\r\n          params : {\r\n            pincode: message,\r\n          lang: language\r\n        }})\r\n        return response\r\n      };\r\n      get_translation(lowercase,a.getLanguage()).then((response) => {\r\n        const message = this.createChatBotMessage(response.data)\r\n        this.addMessageToState(message)\r\n      })\r\n    } \r\n\r\n    /*------------------------------------------------Option 3-----------------------------------------------*/\r\n    \r\n    cancel_order = (lowercase) => {\r\n      if (this.ids.includes(lowercase)) {\r\n        this.order_id = lowercase\r\n        this.get_translation(\"Do you want to cancel the order , type yes or no\",a.getLanguage()).then((response) => {\r\n          const message = this.createChatBotMessage(response.data,{widget: \"options3\",})\r\n          this.addMessageToState(message)\r\n        })\r\n      }\r\n      else{\r\n        const message = this.createChatBotMessage(\"Please enter the correct order-id\");\r\n          this.addMessageToState(message);\r\n      }\r\n    }\r\n    cancel_order_yes = () => {\r\n      var index = this.ids.indexOf(this.order_id)\r\n      delete this.ids[index];\r\n      this.get_translation(\"Order deleted Sucessfully\",a.getLanguage()).then((response) => {\r\n        const message = this.createChatBotMessage(response.data)\r\n        this.addMessageToState(message)\r\n      })\r\n    }\r\n\r\n    cancel_order_no = () => {\r\n      this.get_translation(\"Cancellation Process terminated Sucessfully\",a.getLanguage()).then((response) => {\r\n        const message = this.createChatBotMessage(response.data)\r\n        this.addMessageToState(message)\r\n      })\r\n    }\r\n\r\n    /*------------------------------------------------Option 4-----------------------------------------------*/ \r\n\r\n    home_eye_test = () => {\r\n      this.get_translation(\"Please contact our Customer service centre to get an appointment - contact 180-100-1111\",a.getLanguage()).then((response) => {\r\n        const message = this.createChatBotMessage(response.data)\r\n        this.addMessageToState(message)\r\n      })\r\n    }\r\n\r\n    try_on = () => {\r\n      this.get_translation(\"This feature is available in android or the ios app , please download the app to see the feature\",a.getLanguage()).then((response) => {\r\n        const message = this.createChatBotMessage(response.data)\r\n        this.addMessageToState(message)\r\n      })\r\n    }\r\n\r\n    /*------------------------------------------------Option 5-----------------------------------------------*/ \r\n\r\n    language_option_1 = () => {\r\n      a.setLanguage(1);\r\n      console.log(a.getLanguage())\r\n      const message = this.createChatBotMessage(\"Language changed to telugu\")\r\n      this.addMessageToState(message)\r\n    }\r\n\r\n    language_option_2 = () => {\r\n      const message = this.createChatBotMessage(\"Language changed to hindi\")\r\n      a.setLanguage(2);\r\n      console.log(a.getLanguage())\r\n      this.addMessageToState(message)\r\n      \r\n    }\r\n\r\n    language_option_3 = () => {\r\n      a.setLanguage(3);\r\n      console.log(a.getLanguage())\r\n      const message = this.createChatBotMessage(\"Language changed to english\")\r\n      this.addMessageToState(message)\r\n    }\r\n\r\n    language_option_4 = () => {\r\n      a.setLanguage(4);\r\n      console.log(a.getLanguage())\r\n      const message = this.createChatBotMessage(\"Language changed to tamil\")\r\n      this.addMessageToState(message)\r\n    }\r\n\r\n    language_option_5 = () => {\r\n      a.setLanguage(5);\r\n      console.log(a.getLanguage())\r\n      const message = this.createChatBotMessage(\"Language changed to kannada\")\r\n      this.addMessageToState(message)\r\n    }\r\n\r\n    addMessageToState = (message) => {\r\n      this.setState((prevState) => ({\r\n        ...prevState,\r\n        messages: [...prevState.messages, message],\r\n      }));\r\n    };\r\n  }\r\n  \r\n  export default ActionProvider;","class MessageParser {\r\n    constructor(actionProvider) {\r\n      this.actionProvider = actionProvider;\r\n    }\r\n  \r\n    parse(message) {\r\n      //console.log(message);\r\n      const lowercase = message.toLowerCase();\r\n\r\n      if(lowercase.includes(\"start\")){\r\n        this.actionProvider.start_again();\r\n      }\r\n\r\n      if(lowercase.includes(\"5000\")){\r\n        this.actionProvider.locate_store(lowercase);\r\n      }\r\n\r\n      if(lowercase.includes(\"1000\")){\r\n        this.actionProvider.cancel_order(lowercase);\r\n      }\r\n\r\n      if (lowercase.includes(\"yes\")){\r\n        this.actionProvider.cancel_order_yes();\r\n      }\r\n\r\n      if (lowercase.includes(\"no\")){\r\n        this.actionProvider.cancel_order_no();\r\n      }\r\n    }\r\n  }\r\n  \r\n  export default MessageParser;","import React from \"react\";\nimport Chatbot from \"react-chatbot-kit\";\nimport 'react-chatbot-kit/build/main.css';\nimport config from \"./chatbot/config\";\nimport ActionProvider from \"./chatbot/ActionProvider\";\nimport MessageParser from \"./chatbot/MessageParser\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div style={{ maxWidth: \"300px\" }}>\n        <Chatbot config={config} actionProvider={ActionProvider} messageParser={MessageParser} />\n      </div>\n    </div>\n  );\n  }\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <App />\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}